##Create a class Product with properties(itemNo,name,price,quantity) and methods(Constructor,setters and getters and toString method). 
##Create 5 objects using array of objects concepts and print the object details using toString method.

class Product {
    int itemNo;
    String name;
    double price;
    int quantity;

    Product(int no, String n, double p, int q) {
        itemNo = no; name = n; price = p; quantity = q;
    }
    public String toString() {
        return itemNo + " | " + name + " | ₹" + price + " | Qty: " + quantity;
    }
    public static void main(String[] args) {

        Product[] p = {
            new Product(1, "Laptop", 50000, 2),
            new Product(2, "Mouse", 500, 10),
            new Product(3, "Keyboard", 1500, 5),
            new Product(4, "Monitor", 7000, 3),
            new Product(5, "Phone", 25000, 4)
        };
        for (Product prod : p) System.out.println(prod);
    }
}

##Create a class Customer with properties(custId,name,address,phoneNo) and methods(Constructor,setters and getters and toString method). 
##Create 5 objects using array of objects concepts and print the object details using toString method.

class Customer {
    int custId;
    String name, address, phone;

    Customer(int id, String n, String addr, String ph) {
        custId = id; name = n; address = addr; phone = ph;
    }

    public String toString() {
        return custId + " | " + name + " | " + address + " | " + phone;
    }

    public static void main(String[] args) {
        Customer[] c = {
            new Customer(101, "Rohit", "Jorhat", "9999"),
            new Customer(102, "Tina", "Guwahati", "8888"),
            new Customer(103, "Aman", "Tezpur", "7777"),
            new Customer(104, "Sara", "Silchar", "6666"),
            new Customer(105, "Raj", "Dibrugarh", "5555")
        };
        for (Customer cust : c) System.out.println(cust);
    }
}

##Create a Parent class Account with properties(accNo,name, address, phoneNo, dob, balance) and methods(Constructor,setters and getters). 
##Create a Derived class SavingAccount with methods(deposit() and withdraw() ). Create a main method to create the object and implement the Deposit and Withdraw method.

class Account {
    long accNo;
    String name, address, phone, dob;
    double balance;

    Account(long no, String n, String addr, String ph, String d, double bal) {
        accNo = no; name = n; address = addr; phone = ph; dob = d; balance = bal;
    }
}

class SavingAccount extends Account {
    SavingAccount(long no, String n, String a, String p, String d, double b) {
        super(no, n, a, p, d, b);
    }
    void deposit(double amt) {
        balance += amt;
        System.out.println("Deposited: ₹" + amt + " | Balance: ₹" + balance);
    }
    void withdraw(double amt) {
        if (amt <= balance) {
            balance -= amt;
            System.out.println("Withdrawn: ₹" + amt + " | Balance: ₹" + balance);
        } else System.out.println("Not enough balance!");
    }

    public static void main(String[] args) {
        SavingAccount s = new SavingAccount(12345, "Rohit", "Jorhat", "9999", "01-01-2000", 5000);
        s.deposit(2000);
        s.withdraw(1000);
        s.withdraw(7000);
    }
}
